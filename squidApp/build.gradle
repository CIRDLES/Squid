// Note: "common.gradle" in the root project contains additional initialization
//   for this project. This initialization is applied in the "build.gradle"
//   of the root project.

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "mainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.

//apply plugin: "application"
plugins {
    id 'application'
   // id "org.openjfx.javafxplugin" version "0.0.10"
}

if (!hasProperty('mainClass')) {
    ext.mainClass = 'org.cirdles.squid.gui.SquidUI'
}

mainClassName = 'org.cirdles.squid.gui.SquidUI'

//javafx {
//    version = "17"
//    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.web' ]
//}

dependencies {
    implementation 'org.jetbrains:annotations:22.0.0'
    implementation project(":squidCore")
    implementation group: 'org.apache.xmlgraphics', name: 'batik-svg-dom', version: '1.14'
    implementation group: 'org.apache.xmlgraphics', name: 'fop', version: '2.6'
    implementation 'com.github.cirdles:topsoil:87d2f107c0'
    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'


//    runtimeOnly "org.openjfx:javafx-controls:$javafx.version:win"
//    runtimeOnly "org.openjfx:javafx-controls:$javafx.version:linux"
//    runtimeOnly "org.openjfx:javafx-controls:$javafx.version:mac"
//    runtimeOnly "org.openjfx:javafx-fxml:$javafx.version:win"
//    runtimeOnly "org.openjfx:javafx-fxml:$javafx.version:linux"
//    runtimeOnly "org.openjfx:javafx-fxml:$javafx.version:mac"
//    runtimeOnly "org.openjfx:javafx-web:$javafx.version:win"
//    runtimeOnly "org.openjfx:javafx-web:$javafx.version:linux"
//    runtimeOnly "org.openjfx:javafx-web:$javafx.version:mac"
}



task fatAppJar(type: Jar) {
    manifest {
        attributes 'Main-Class': mainClass
    }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    archiveBaseName = 'Squid3'
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

configurations.all {
    // Check for updates every build when 0 or not when 2628000
    resolutionStrategy.cacheChangingModulesFor 2628000, 'seconds'
}